(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-68a5c179"],{"0a43":function(t,a,o){},5504:function(t,a,o){"use strict";o("0a43")},"7eb0":function(t,a,o){"use strict";o.r(a);var e=function(){var t=this,a=t._self._c;return a("div",{staticClass:"pool-view"},[a("div",{staticClass:"container mini"},[a("BackButton",{attrs:{text:"Stand"},on:{click:t.toStand}}),a("h1",[t._v("Magic happens here")]),a("div",{staticClass:"pool-head-bar"},[a("div",{staticClass:"btns-group"},[a("button",{staticClass:"btn mini borrow-btn",class:{active:"borrow"===t.actionType},on:{click:function(a){return t.setActionType("borrow")}}},[t._v(" Borrow ")]),a("button",{staticClass:"btn mini replay-btn",class:{active:"repay"===t.actionType},on:{click:function(a){return t.setActionType("repay")}}},[t._v(" Repay ")])]),t.pool?[a("LiquidationBar",{attrs:{pool:t.pool}})]:t._e()],2),t.pool?a("div",{staticClass:"pool-content"},[a("BorrowRepayComponent",{attrs:{actionType:t.actionType,balance:t.pool.userBalance,pairBalance:t.pool.userPairBalance,isUpdatePrice:t.pool.askUpdatePrice,tokenName:t.pool.token.name,tokenToUsd:t.pool.tokenPrice,tokenDecimals:t.pool.token.decimals,tokenPair:t.pool.tokenPairPrice,tokenPairName:t.pool.pairToken.name,tokenPairDecimals:t.pool.pairToken.decimals,userTotalCollateral:t.pool.userCollateralShare,userTotalBorrowed:t.pool.userBorrowPart,totalBorrowElastic:t.totalBorrowElastic,totalBorrowBase:t.totalBorrowBase,ltv:t.pool.ltv},on:{addAndBorrow:t.addAndBorrowHandler,addCollateral:t.addCollateralHandler,borrow:t.borrowHandler,removeAndRepay:t.removeAndRepayHandler,removeAndRepayMax:t.removeAndRepayMaxHandler,repay:t.repayHandler,removeCollateral:t.removeCollateralHandler,addAndBorrowMultiple:t.addMultiBorrowHandler,borrowMultiple:t.addMultiBorrowHandler}}),a("CollateralParameters",{attrs:{infoItems:t.pool.collateralInfo,exchangeRate:t.pool.tokenPrice,tokenName:t.pool.token.name}}),a("Balances",{attrs:{balances:[{balance:t.pool.userBalance,token:t.pool.token.name,decimals:t.pool.token.decimals},{balance:t.pool.userPairBalance,token:t.pool.pairToken.name,decimals:t.pool.pairToken.decimals}]}}),a("InfoBlock",{attrs:{infoItems:t.pool.mainInfo}})],1):t._e()],1)])},s=[];o("14d9");const i=()=>o.e("chunk-20c2f7eb").then(o.bind(null,"cba4")),n=()=>o.e("chunk-92e0452a").then(o.bind(null,"b46d")),c=()=>o.e("chunk-4aa7f184").then(o.bind(null,"5c17")),r=()=>o.e("chunk-68365d14").then(o.bind(null,"c02b")),l=()=>o.e("chunk-0cf3d7d2").then(o.bind(null,"3380")),d=()=>o.e("chunk-41bf0df2").then(o.bind(null,"8c2a"));var h={data(){return{actionType:"borrow",totalBorrowElastic:0,totalBorrowBase:0,gasLimitConst:1e3}},computed:{pool(){const t=this.$route.params.id;return this.$store.getters.getPoolById(t)},signer(){return this.$store.getters.getSigner},account(){return this.$store.getters.getAccount}},methods:{async getTotalBorrow(){const t=await this.pool.contractInstance.totalBorrow();this.totalBorrowElastic=t.elastic,this.totalBorrowBase=t.base},setActionType(t){t!==this.actionType&&(this.actionType=t)},toStand(){this.$router.push({name:"Stand"})},async addMultiBorrowHandler(t){let a=await this.isTokenApprowed(this.pool.token.contract,this.pool.masterContractInstance.address);a||(a=await this.approveToken(this.pool.token.contract,this.pool.masterContractInstance.address));let o=await this.isTokenApprowed(this.pool.token.contract,this.pool.swapContract.address);o||(o=await this.approveToken(this.pool.token.contract,this.pool.swapContract.address));let e=await this.isTokenApprowed(this.pool.pairTokenContract,this.pool.swapContract.address);e||(e=await this.approveToken(this.pool.pairTokenContract,this.pool.swapContract.address));const s=await this.isApprowed();if(a&&o&&e)return this.cookMultiBorrow(t,s),!1},async addAndBorrowHandler(t){const a=await this.isApprowed(),o=await this.approveToken(this.pool.token.contract,this.pool.masterContractInstance.address);o&&this.cookAddAndBorrow(t,a)},async addCollateralHandler(t){const a=await this.isApprowed(),o=await this.approveToken(this.pool.token.contract,this.pool.masterContractInstance.address);o&&this.cookAddCollateral(t,a)},async borrowHandler(t){const a=await this.isApprowed();return this.cookBorrow(t,a),!1},async removeAndRepayHandler(t){const a=await this.isApprowed(),o=await this.approveToken(this.pool.pairTokenContract,this.pool.masterContractInstance.address);o&&this.cookRemoveAndRepay(t,a)},async repayHandler(t){const a=await this.isApprowed(),o=await this.approveToken(this.pool.pairTokenContract,this.pool.masterContractInstance.address);o&&this.cookRepay(t,a)},async removeCollateralHandler(t){const a=await this.isApprowed();this.cookRemoveCollateral(t,a)},async removeAndRepayMaxHandler(t){const a=await this.isTokenApprowed(this.pool.pairTokenContract,this.pool.masterContractInstance.address),o=await this.isApprowed();if(a)return this.cookRemoveAndRepayMax(t,o),!1;const e=await this.approveToken(this.pool.pairTokenContract,this.pool.masterContractInstance.address);e&&this.cookRemoveAndRepayMax(t,o)},async cookRemoveAndRepayMax({amount:t,collateralAmount:a,updatePrice:o},e){const s=this.account,i=this.pool.pairToken.address,n=this.$ethers.utils.defaultAbiCoder.encode(["address","address","int256","int256"],[i,s,"0x00","-0x01"]),c=this.$ethers.utils.defaultAbiCoder.encode(["int256"],[a]),r=this.$ethers.utils.defaultAbiCoder.encode(["int256","address","bool"],[a,s,!1]),l=this.$ethers.utils.defaultAbiCoder.encode(["int256","address"],[t,s]),d=this.$ethers.utils.defaultAbiCoder.encode(["address","address","int256","int256"],[this.pool.token.address,s,"0x00",t]);await this.getGasPrice();if(e){if(o){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,6,20,2,4,21],[0,0,0,0,0,0],[t,c,n,r,l,d],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,6,20,2,4,21],[0,0,0,0,0,0],[t,c,n,r,l,d],{value:"0",gasLimit:o});return!1}const t=await this.pool.contractInstance.estimateGas.cook([6,20,2,4,21],[0,0,0,0,0],[c,n,r,l,d],{value:"0"}),a=this.gasLimitConst+ +t.toString();await this.pool.contractInstance.cook([6,20,2,4,21],[0,0,0,0,0],[c,n,r,l,d],{value:"0",gasLimit:a})}else{const t=await this.getApprovalEncode();if("ledger"===t){const t=await this.approveMasterContract();if(!t)return!1;if(o){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,6,20,2,4,21],[0,0,0,0,0,0],[t,c,n,r,l,d],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,6,20,2,4,21],[0,0,0,0,0,0],[t,c,n,r,l,d],{value:"0",gasLimit:o});return!1}const a=await this.pool.contractInstance.estimateGas.cook([6,20,2,4,21],[0,0,0,0,0],[c,n,r,l,d],{value:"0"}),e=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([6,20,2,4,21],[0,0,0,0,0],[c,n,r,l,d],{value:"0",gasLimit:e});return!1}if(o){const a=this.getUpdateRateEncode(),o=await this.pool.contractInstance.estimateGas.cook([24,11,6,20,2,4,21],[0,0,0,0,0,0,0],[t,a,c,n,r,l,d],{value:"0"}),e=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([24,11,6,20,2,4,21],[0,0,0,0,0,0,0],[t,a,c,n,r,l,d],{value:"0",gasLimit:e});return!1}const a=await this.pool.contractInstance.estimateGas.cook([24,6,20,2,4,21],[0,0,0,0,0,0],[t,c,n,r,l,d],{value:"0"}),e=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([24,6,20,2,4,21],[0,0,0,0,0,0],[t,c,n,r,l,d],{value:"0",gasLimit:e})}},async cookRepay({amount:t,updatePrice:a},o){const e=this.account,s=this.pool.pairToken.address,i=this.$ethers.utils.defaultAbiCoder.encode(["address","address","int256","int256"],[s,e,t,"0x0"]),n=this.$ethers.utils.defaultAbiCoder.encode(["int256"],["-0x01"]),c=this.$ethers.utils.defaultAbiCoder.encode(["int256","address","bool"],["-0x01",e,!1]);await this.getGasPrice();if(o){if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,20,7,2],[0,0,0,0],[t,i,n,c],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,20,7,2],[0,0,0,0],[t,i,n,c],{value:"0",gasLimit:o});return!1}const t=await this.pool.contractInstance.estimateGas.cook([20,7,2],[0,0,0],[i,n,c],{value:"0"}),o=this.gasLimitConst+ +t.toString();await this.pool.contractInstance.cook([20,7,2],[0,0,0],[i,n,c],{value:"0",gasLimit:o})}else{const t=await this.getApprovalEncode();if("ledger"===t){const t=await this.approveMasterContract();if(!t)return!1;if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,20,7,2],[0,0,0,0],[t,i,n,c],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,20,7,2],[0,0,0,0],[t,i,n,c],{value:"0",gasLimit:o});return!1}const o=await this.pool.contractInstance.estimateGas.cook([20,7,2],[0,0,0],[i,n,c],{value:"0"}),e=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([20,7,2],[0,0,0],[i,n,c],{value:"0",gasLimit:e});return!1}if(a){const a=this.getUpdateRateEncode(),o=await this.pool.contractInstance.estimateGas.cook([24,11,20,7,2],[0,0,0,0,0],[t,a,i,n,c],{value:"0"}),e=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([24,11,20,7,2],[0,0,0,0,0],[t,a,i,n,c],{value:"0",gasLimit:e});return!1}const o=await this.pool.contractInstance.estimateGas.cook([24,20,7,2],[0,0,0,0],[t,i,n,c],{value:"0"}),e=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([24,20,7,2],[0,0,0,0],[t,i,n,c],{value:"0",gasLimit:e})}},async cookRemoveCollateral({amount:t,updatePrice:a},o){const e=this.$ethers.utils.defaultAbiCoder.encode(["int256","address"],[t,this.account]),s=this.$ethers.utils.defaultAbiCoder.encode(["address","address","int256","int256"],[this.pool.token.address,this.account,"0x00",t]);await this.getGasPrice();if(o){if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,4,21],[0,0,0],[t,e,s],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,4,21],[0,0,0],[t,e,s],{value:"0",gasLimit:o});return!1}const t=await this.pool.contractInstance.estimateGas.cook([4,21],[0,0],[e,s],{value:"0"}),o=this.gasLimitConst+ +t.toString();await this.pool.contractInstance.cook([4,21],[0,0],[e,s],{value:"0",gasLimit:o})}else{const t=await this.getApprovalEncode();if("ledger"===t){const t=await this.approveMasterContract();if(!t)return!1;if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,4,21],[0,0,0],[t,e,s],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,4,21],[0,0,0],[t,e,s],{value:"0",gasLimit:o});return!1}const o=await this.pool.contractInstance.estimateGas.cook([4,21],[0,0],[e,s],{value:"0"}),i=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([4,21],[0,0],[e,s],{value:"0",gasLimit:i});return!1}if(a){const a=this.getUpdateRateEncode(),o=await this.pool.contractInstance.estimateGas.cook([24,11,4,21],[0,0,0,0],[t,a,e,s],{value:"0"}),i=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([24,11,4,21],[0,0,0,0],[t,a,e,s],{value:"0",gasLimit:i});return!1}const o=await this.pool.contractInstance.estimateGas.cook([24,4,21],[0,0,0],[t,e,s],{value:"0"}),i=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([24,4,21],[0,0,0],[t,e,s],{value:"0",gasLimit:i})}},async cookRemoveAndRepay({amount:t,collateralAmount:a,updatePrice:o},e){const s=this.account,i=this.pool.pairToken.address,n=this.$ethers.utils.defaultAbiCoder.encode(["address","address","int256","int256"],[i,s,a,"0x0"]),c=this.$ethers.utils.defaultAbiCoder.encode(["int256"],["-0x01"]),r=this.$ethers.utils.defaultAbiCoder.encode(["int256","address","bool"],["-0x01",s,!1]),l=this.$ethers.utils.defaultAbiCoder.encode(["int256","address"],[t,s]),d=this.$ethers.utils.defaultAbiCoder.encode(["address","address","int256","int256"],[this.pool.token.address,s,"0x00",t]);await this.getGasPrice();if(e){if(o){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,20,7,2,4,21],[0,0,0,0,0,0],[t,n,c,r,l,d],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,20,7,2,4,21],[0,0,0,0,0,0],[t,n,c,r,l,d],{value:"0",gasLimit:o});return!1}const t=await this.pool.contractInstance.estimateGas.cook([20,7,2,4,21],[0,0,0,0,0],[n,c,r,l,d],{value:"0"}),a=this.gasLimitConst+ +t.toString();await this.pool.contractInstance.cook([20,7,2,4,21],[0,0,0,0,0],[n,c,r,l,d],{value:"0",gasLimit:a})}else{const t=await this.getApprovalEncode();if("ledger"===t){const t=await this.approveMasterContract();if(!t)return!1;if(o){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,20,7,2,4,21],[0,0,0,0,0,0],[t,n,c,r,l,d],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,20,7,2,4,21],[0,0,0,0,0,0],[t,n,c,r,l,d],{value:"0",gasLimit:o});return!1}const a=await this.pool.contractInstance.estimateGas.cook([20,7,2,4,21],[0,0,0,0,0],[n,c,r,l,d],{value:"0"}),e=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([20,7,2,4,21],[0,0,0,0,0],[n,c,r,l,d],{value:"0",gasLimit:e});return!1}if(o){const a=this.getUpdateRateEncode(),o=await this.pool.contractInstance.estimateGas.cook([24,11,20,7,2,4,21],[0,0,0,0,0,0,0],[t,a,n,c,r,l,d],{value:"0"}),e=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([24,11,20,7,2,4,21],[0,0,0,0,0,0,0],[t,a,n,c,r,l,d],{value:"0",gasLimit:e});return!1}const a=await this.pool.contractInstance.estimateGas.cook([24,20,7,2,4,21],[0,0,0,0,0,0],[t,n,c,r,l,d],{value:"0"}),e=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([24,20,7,2,4,21],[0,0,0,0,0,0],[t,n,c,r,l,d],{value:"0",gasLimit:e})}},async cookBorrow({amount:t,updatePrice:a},o){const e=this.getBorrowEncode(t),s=this.getBentoWithdrawEncode(t);await this.getGasPrice();if(o){if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,5,21],[0,0,0],[t,e,s],{value:0}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,5,21],[0,0,0],[t,e,s],{value:0,gasLimit:o});return!1}const t=await this.pool.contractInstance.estimateGas.cook([5,21],[0,0],[e,s],{value:0}),o=this.gasLimitConst+ +t.toString();await this.pool.contractInstance.cook([5,21],[0,0],[e,s],{value:0,gasLimit:o});return!1}const i=await this.getApprovalEncode();if("ledger"===i){const t=await this.approveMasterContract();if(!t)return!1;if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,5,21],[0,0,0],[t,e,s],{value:0}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,5,21],[0,0,0],[t,e,s],{value:0,gasLimit:o});return!1}const o=await this.pool.contractInstance.estimateGas.cook([5,21],[0,0],[e,s],{value:0}),i=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([5,21],[0,0],[e,s],{value:0,gasLimit:i});return!1}if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([24,11,5,21],[0,0,0,0],[i,t,e,s],{value:0}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([24,11,5,21],[0,0,0,0],[i,t,e,s],{value:0,gasLimit:o});return!1}const n=await this.pool.contractInstance.estimateGas.cook([24,5,21],[0,0,0],[i,e,s],{value:0}),c=this.gasLimitConst+ +n.toString();await this.pool.contractInstance.cook([24,5,21],[0,0,0],[i,e,s],{value:0,gasLimit:c})},async cookAddCollateral({amount:t,updatePrice:a},o){const e=this.getDepositEncode(t),s=this.getAddCollateralEncode();await this.getGasPrice();if(o){if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,20,10],[0,0,0],[t,e,s],{value:0}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,20,10],[0,0,0],[t,e,s],{value:0,gasLimit:o});return!1}const t=await this.pool.contractInstance.estimateGas.cook([20,10],[0,0],[e,s],{value:0}),o=this.gasLimitConst+ +t.toString();await this.pool.contractInstance.cook([20,10],[0,0],[e,s],{value:0,gasLimit:o});return!1}const i=await this.getApprovalEncode();if("ledger"===i){const t=await this.approveMasterContract();if(!t)return!1;if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,20,10],[0,0,0],[t,e,s],{value:0}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,20,10],[0,0,0],[t,e,s],{value:0,gasLimit:o});return!1}const o=await this.pool.contractInstance.estimateGas.cook([20,10],[0,0],[e,s],{value:0}),i=this.gasLimitConst+ +o.toString();await this.pool.contractInstance.cook([20,10],[0,0],[e,s],{value:0,gasLimit:i});return!1}if(a){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([24,11,20,10],[0,0,0,0],[i,t,e,s],{value:0}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([24,11,20,10],[0,0,0,0],[i,t,e,s],{value:0,gasLimit:o});return!1}const n=8e6;await this.pool.contractInstance.cook([24,20,10],[0,0,0],[i,e,s],{value:0,gasLimit:n})},async cookAddAndBorrow({collateralAmount:t,amount:a,updatePrice:o},e){const s=this.getBorrowEncode(a),i=this.getDepositEncode(t),n=this.getAddCollateralEncode(),c=this.getBentoWithdrawEncode(a);await this.getGasPrice();if(e){if(o){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,5,21,20,10],[0,0,0,0,0],[t,s,c,i,n],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,5,21,20,10],[0,0,0,0,0],[t,s,c,i,n],{value:"0",gasLimit:o});return!1}const t=await this.pool.contractInstance.estimateGas.cook([5,21,20,10],[0,0,0,0],[s,c,i,n],{value:"0"}),a=this.gasLimitConst+ +t.toString();await this.pool.contractInstance.cook([5,21,20,10],[0,0,0,0],[s,c,i,n],{value:"0",gasLimit:a});return!1}const r=await this.getApprovalEncode();if("ledger"===r){const t=await this.approveMasterContract();if(!t)return!1;if(o){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([11,5,21,20,10],[0,0,0,0,0],[t,s,c,i,n],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([11,5,21,20,10],[0,0,0,0,0],[t,s,c,i,n],{value:"0",gasLimit:o});return!1}const a=await this.pool.contractInstance.estimateGas.cook([5,21,20,10],[0,0,0,0],[s,c,i,n],{value:"0"}),e=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([5,21,20,10],[0,0,0,0],[s,c,i,n],{value:"0",gasLimit:e});return!1}if(o){const t=this.getUpdateRateEncode(),a=await this.pool.contractInstance.estimateGas.cook([24,11,5,21,20,10],[0,0,0,0,0,0],[r,t,s,c,i,n],{value:"0"}),o=this.gasLimitConst+ +a.toString();await this.pool.contractInstance.cook([24,11,5,21,20,10],[0,0,0,0,0,0],[r,t,s,c,i,n],{value:"0",gasLimit:o});return!1}const l=await this.pool.contractInstance.estimateGas.cook([24,5,21,20,10],[0,0,0,0,0],[r,s,c,i,n],{value:"0"}),d=this.gasLimitConst+ +l.toString();await this.pool.contractInstance.cook([24,5,21,20,10],[0,0,0,0,0],[r,s,c,i,n],{value:"0",gasLimit:d})},async cookMultiBorrow({collateralAmount:t,amount:a,updatePrice:o,minExpected:e},s){const i=this.pool.token.address,n=this.pool.swapContract.address,c=this.account,r=[],l=[],d=[];if(!s){const t=await this.getApprovalEncode();if("ledger"===t){const t=await this.approveMasterContract();if(!t)return!1}else r.push(24),l.push(0),d.push(t)}if(o){const t=this.getUpdateRateEncode();r.push(11),l.push(0),d.push(t)}const h=this.$ethers.utils.defaultAbiCoder.encode(["int256","address","bool"],["-0x02",c,!1]);if(t){const a=this.$ethers.utils.defaultAbiCoder.encode(["address","address","int256","int256"],[i,c,t,"0"]);r.push(20),l.push(0),d.push(a),r.push(10),l.push(0),d.push(h)}const p=this.$ethers.utils.defaultAbiCoder.encode(["int256","address"],[a,n]);r.push(5),l.push(0),d.push(p);const u=await this.pool.swapContract.populateTransaction.swap(c,e,0,{gasLimit:1e7}),g=u.data.substr(0,138),f=this.$ethers.utils.defaultAbiCoder.encode(["address","bytes","bool","bool","uint8"],[n,g,!1,!0,2]);r.push(30),l.push(0),d.push(f),r.push(10),l.push(0),d.push(h);const w={events:r,values:l,datas:d};try{const t=await this.pool.contractInstance.estimateGas.cook(w.events,w.values,w.datas,{value:0}),a=this.gasLimitConst+ +t.toString();await this.pool.contractInstance.cook(w.events,w.values,w.datas,{value:0,gasLimit:a})}catch(m){if("UNPREDICTABLE_GAS_LIMIT"===m.code){const t={msg:"OMG OMG OMG"};this.$store.commit("addNotification",t)}}},getBorrowEncode(t){return this.$ethers.utils.defaultAbiCoder.encode(["int256","address"],[t,this.account])},getDepositEncode(t){return this.$ethers.utils.defaultAbiCoder.encode(["address","address","int256","int256"],[this.pool.token.address,this.account,t,"0"])},getUpdateRateEncode(){return this.$ethers.utils.defaultAbiCoder.encode(["bool","uint256","uint256"],[!0,"0x00","0x00"])},getAddCollateralEncode(){return this.$ethers.utils.defaultAbiCoder.encode(["int256","address","bool"],["-2",this.account,!1])},getBentoWithdrawEncode(t){const a=this.pool.pairToken.address;return this.$ethers.utils.defaultAbiCoder.encode(["address","address","int256","int256"],[a,this.account,t,"0x0"])},async getApprovalEncode(){const t=this.account,a=await this.getVerifyingContract(),o=await this.getMasterContract(),e=await this.getNonce(),s=this.$store.getters.getActiveChain.code,i={name:"BentoBox V1",chainId:s,verifyingContract:a},n={SetMasterContractApproval:[{name:"warning",type:"string"},{name:"user",type:"address"},{name:"masterContract",type:"address"},{name:"approved",type:"bool"},{name:"nonce",type:"uint256"}]},c={warning:"Give FULL access to funds in (and approved to) BentoBox?",user:t,masterContract:o,approved:!0,nonce:e};let r;try{r=await this.signer._signTypedData(i,n,c)}catch(d){return-32603===d.code&&"ledger"}const l=this.parseSignature(r);return this.$ethers.utils.defaultAbiCoder.encode(["address","address","bool","uint8","bytes32","bytes32"],[t,o,!0,l.v,l.r,l.s])},parseSignature(t){const a=t.substring(2);var o=a.substring(0,64),e=a.substring(64,128),s=a.substring(128,130);return{r:"0x"+o,s:"0x"+e,v:parseInt(s,16)}},async getGasPrice(){try{const t=await this.signer.getGasPrice();return t}catch(t){}},async getMasterContract(){try{const t=await this.pool.contractInstance.masterContract();return t}catch(t){}},async getVerifyingContract(){try{const t=await this.pool.contractInstance.bentoBox();return t}catch(t){}},async isApprowed(){try{const t=await this.getMasterContract(),a=await this.pool.masterContractInstance.masterContractApproved(t,this.account);return a}catch(t){}},async isTokenApprowed(t,a){try{const o=await t.allowance(this.account,a,{gasLimit:1e6});return parseFloat(o.toString())>0}catch(o){return!1}},async approveToken(t,a){try{const o=await t.estimateGas.approve(a,"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),e=this.gasLimitConst+ +o.toString(),s=await t.approve(a,"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",{gasLimit:e});await s.wait();return!0}catch(o){return!1}},async approveMasterContract(){try{const t=await this.getMasterContract(),a=await this.pool.masterContractInstance.setMasterContractApproval(this.account,t,!0,this.$ethers.utils.formatBytes32String(""),this.$ethers.utils.formatBytes32String(""),this.$ethers.utils.formatBytes32String("")),o=await a.wait();return o}catch(t){return!1}},async getNonce(){try{const t=await this.pool.masterContractInstance.nonces(this.account);return t.toString()}catch(t){}},async getTokenPrice(t){const a=await this.$store.dispatch("getTokenPrice",{from:t,to:"USD"});return a.USD},async updatePrices(){this.pool.tokenPrice=await this.getTokenPrice(this.pool.token.name),this.pool.tokenPairPrice=await this.getTokenPrice(this.pool.pairToken.name)}},async created(){const t=this.$store.getters.getWalletIsConnected;if(!t)return this.$router.push({name:"Home"}),alert("Connect wallet first"),!1;const a=this.$route.params.id,o=this.$store.getters.getPoolById(a);if(!o)return this.$router.push({name:"Stand"}),!1;await this.getTotalBorrow(),!this.$route.query.actionType||"borrow"!==this.$route.query.actionType&&"repay"!==this.$route.query.actionType||this.setActionType(this.$route.query.actionType)},components:{BorrowRepayComponent:i,CollateralParameters:n,Balances:c,InfoBlock:r,BackButton:l,LiquidationBar:d}},p=h,u=(o("5504"),o("2877")),g=Object(u["a"])(p,e,s,!1,null,"2d3657d1",null);a["default"]=g.exports}}]);